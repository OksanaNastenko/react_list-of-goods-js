{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","goods","setGoods","alphabetical","bylength","reversed","status","setStatus","isModified","className","type","onClick","prevState","sort","a","b","localeCompare","length","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"wOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,CACnCG,cAAc,EACdC,UAAU,EACVC,UAAU,IAHZ,mBAAOC,EAAP,KAAeC,EAAf,KAMMC,EAAaF,EAAOH,cAAgBG,EAAOF,UAAYE,EAAOD,SAmDpE,OACE,sBAAKI,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEH,EAAOH,aAAe,iBAAmB,0BAE3CQ,QAzDR,WACET,GAAS,SAACU,GACR,OAAKN,EAAOD,SAIL,YAAIO,GAAWC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,MAH5C,YAAIF,GAAWC,UAM1BN,GAAU,SAAAK,GAAS,kCACdA,GADc,IAEjBT,cAAc,EACdC,UAAU,QAwCR,iCAUA,wBACEM,KAAK,SACLD,UACEH,EAAOF,SAAW,oBAAsB,6BAE1CO,QAnDR,WACET,GAAS,SAACU,GACR,OAAKN,EAAOD,SAIL,YAAIO,GAAWC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEE,OAASH,EAAEG,UAHzC,YAAIL,GAAWC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,aAMtDV,GAAU,SAAAK,GAAS,kCACdA,GADc,IAEjBR,UAAU,EACVD,cAAc,QAkCZ,4BAUA,wBACEO,KAAK,SACLD,UACEH,EAAOD,SAAW,oBAAsB,6BAE1CM,QA7CR,WACET,GAAS,SAAAU,GAAS,OAAI,YAAIA,GAAWM,aACrCX,GAAU,SAAAK,GAAS,kCACdA,GADc,IAEjBP,UAAWO,EAAUP,eAoCnB,qBAUCG,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVE,QA9CV,WACET,EAASJ,GACTS,EAAU,CACRJ,cAAc,EACdC,UAAU,EACVC,UAAU,KAsCN,sBAUJ,6BACGJ,EAAMkB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCvHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.01274100.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [status, setStatus] = useState({\n    alphabetical: false,\n    bylength: false,\n    reversed: false,\n  });\n\n  const isModified = status.alphabetical || status.bylength || status.reversed;\n\n  function sortAlphabetically() {\n    setGoods((prevState) => {\n      if (!status.reversed) {\n        return [...prevState].sort();\n      }\n\n      return [...prevState].sort((a, b) => b.localeCompare(a));\n    });\n\n    setStatus(prevState => ({\n      ...prevState,\n      alphabetical: true,\n      bylength: false,\n    }));\n  }\n\n  function sortByLength() {\n    setGoods((prevState) => {\n      if (!status.reversed) {\n        return [...prevState].sort((a, b) => a.length - b.length);\n      }\n\n      return [...prevState].sort((a, b) => b.length - a.length);\n    });\n\n    setStatus(prevState => ({\n      ...prevState,\n      bylength: true,\n      alphabetical: false,\n    }));\n  }\n\n  function reverseGoods() {\n    setGoods(prevState => [...prevState].reverse());\n    setStatus(prevState => ({\n      ...prevState,\n      reversed: !prevState.reversed,\n    }));\n  }\n\n  function resetGoods() {\n    setGoods(goodsFromServer);\n    setStatus({\n      alphabetical: false,\n      bylength: false,\n      reversed: false,\n    });\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            status.alphabetical ? 'button is-info' : 'button is-info is-light'\n          }\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            status.bylength ? 'button is-success' : 'button is-success is-light'\n          }\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            status.reversed ? 'button is-warning' : 'button is-warning is-light'\n          }\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {isModified && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}