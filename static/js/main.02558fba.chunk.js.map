{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","ALPHABETICAL","BYLENGTH","App","useState","goods","setGoods","sort","isReversed","status","setStatus","isModified","className","type","cn","onClick","prevState","a","b","localeCompare","length","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"wPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,eACfC,EAAW,WAEJC,EAAM,WACjB,MAA0BC,mBAASJ,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,CACnCG,KAAM,GACNC,YAAY,IAFd,mBAAOC,EAAP,KAAeC,EAAf,KAKMC,EAAaF,EAAOF,MAAQE,EAAOD,WAgDzC,OACE,sBAAKI,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYL,EAAOF,OAASN,IAE9Bc,QAtDR,WACET,GAAS,SAACU,GACR,OAAKP,EAAOD,WAIL,YAAIQ,GAAWT,MAAK,SAACU,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,MAH5C,YAAID,GAAWT,UAM1BG,GAAU,SAAAM,GAAS,kCACdA,GADc,IAEjBT,KAAMN,QAsCJ,iCAUA,wBACEY,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYL,EAAOF,OAASL,IAE9Ba,QAjDR,WACET,GAAS,SAACU,GACR,OAAKP,EAAOD,WAIL,YAAIQ,GAAWT,MAAK,SAACU,EAAGC,GAAJ,OAAUA,EAAEE,OAASH,EAAEG,UAHzC,YAAIJ,GAAWT,MAAK,SAACU,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,aAMtDV,GAAU,SAAAM,GAAS,kCACdA,GADc,IAEjBT,KAAML,QAiCJ,4BAUA,wBACEW,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaL,EAAOD,aAEtBO,QA5CR,WACET,GAAS,SAAAU,GAAS,OAAI,YAAIA,GAAWK,aACrCX,GAAU,SAAAM,GAAS,kCACdA,GADc,IAEjBR,YAAaQ,EAAUR,iBAmCrB,qBAUCG,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA7CV,WACET,EAASN,GACTU,EAAU,CACRH,KAAM,GACNC,YAAY,KAsCR,sBAUJ,6BACGH,EAAMiB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCvHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.02558fba.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst ALPHABETICAL = 'alphabetical';\nconst BYLENGTH = 'bylength';\n\nexport const App = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [status, setStatus] = useState({\n    sort: '',\n    isReversed: false,\n  });\n\n  const isModified = status.sort || status.isReversed;\n\n  function sortAlphabetically() {\n    setGoods((prevState) => {\n      if (!status.isReversed) {\n        return [...prevState].sort();\n      }\n\n      return [...prevState].sort((a, b) => b.localeCompare(a));\n    });\n\n    setStatus(prevState => ({\n      ...prevState,\n      sort: ALPHABETICAL,\n    }));\n  }\n\n  function sortByLength() {\n    setGoods((prevState) => {\n      if (!status.isReversed) {\n        return [...prevState].sort((a, b) => a.length - b.length);\n      }\n\n      return [...prevState].sort((a, b) => b.length - a.length);\n    });\n\n    setStatus(prevState => ({\n      ...prevState,\n      sort: BYLENGTH,\n    }));\n  }\n\n  function reverseGoods() {\n    setGoods(prevState => [...prevState].reverse());\n    setStatus(prevState => ({\n      ...prevState,\n      isReversed: !prevState.isReversed,\n    }));\n  }\n\n  function resetGoods() {\n    setGoods(goodsFromServer);\n    setStatus({\n      sort: '',\n      isReversed: false,\n    });\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': status.sort !== ALPHABETICAL,\n          })}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': status.sort !== BYLENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !status.isReversed,\n          })}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {isModified && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}